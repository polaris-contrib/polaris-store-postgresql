# Tencent is pleased to support the open source community by making Polaris available.
#
# Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
#
# Licensed under the BSD 3-Clause License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://opensource.org/licenses/BSD-3-Clause
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

name: Integration

on:
  push:
    branches:
      - main
      - release*
  pull_request:
    branches:
      - main
      - release*

permissions:
  contents: write

# Always force the use of Go modules
env:
  GO111MODULE: on

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        goarch: [ amd64 ]
        goos: [ linux ]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            vert: 1
        exclude:
          - os: ubuntu-latest
            goos: windows
          - os: ubuntu-latest
            goos: darwin
          - os: windows-latest
            goos: linux
          - os: windows-latest
            goos: darwin
          - os: macos-latest
            goos: windows
          - os: macos-latest
            goos: linux

    runs-on: ${{ matrix.os }}
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Setup the environment.
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      # Checkout latest code
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Initialize Database
        run: |
          # 此处暂时先手动操作，初始化sql
          # 1、初始化postgresql文件地址：store/postgresql/scripts/polaris_server.sql
          # 2、手动通过postgresql客户端导入初始化数据

      # Compile
      - name: Build And Test
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          workir=$(pwd)
          
          echo "workir: ${workir}"
          # cd $work_dir
          cd ${workir}
          ./tool/stop.sh
          cd ..

